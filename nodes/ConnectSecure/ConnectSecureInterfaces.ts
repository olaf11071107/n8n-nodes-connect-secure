import { NodePropertyTypes } from 'n8n-workflow';

export interface IResource {
	name: string;
	value: string;
	description: string;
	operations: IOperation[];
}

export interface IOperation {
	name: string;
	value: string;
	description: string;
	endpoint: string;
	action: string;
	method: string;
	fields?: IField[];
}

export interface IField {
	name: string;
	type: string;
	default?: any;
	description?: string;
	required?: boolean;
	displayOptions?: object;
	options?: Array<{ name: string; value: string; description?: string }>;
}

// Resources from the OpenAPI spec
export const resources: IResource[] = [
	{
		name: 'Auth',
		value: 'auth',
		description: 'Authentication operations',
		operations: [
			{
				name: 'Authorize',
				value: 'authorize',
				description: 'Authorize with Connect Secure',
				endpoint: '/w/authorize',
				action: 'Authorize with Connect Secure',
				method: 'POST',
			},
			{
				name: 'Login',
				value: 'login',
				description: 'Login to Connect Secure',
				endpoint: '/w/auth/login',
				action: 'Login',
				method: 'POST',
				fields: [
					{
						name: 'email',
						type: 'string',
						required: true,
						description: 'Email address',
					},
					{
						name: 'password',
						type: 'string',
						required: true,
						description: 'Password',
					},
				],
			},
			{
				name: 'Logout',
				value: 'logout',
				description: 'Logout from Connect Secure',
				endpoint: '/w/auth/logout',
				action: 'Logout',
				method: 'POST',
			},
			{
				name: 'Get Audit Log',
				value: 'getAuditLog',
				description: 'Retrieve audit log',
				endpoint: '/report_queries/get_audit_log',
				action: 'Get audit log',
				method: 'GET',
			},
		],
	},
	{
		name: 'Company',
		value: 'company',
		description: 'Company operations',
		operations: [
			{
				name: 'Get All Companies',
				value: 'getAllCompanies',
				description: 'Retrieve all companies',
				endpoint: '/r/company/companies',
				action: 'Get all companies',
				method: 'GET',
			},
			{
				name: 'Get Company',
				value: 'getCompany',
				description: 'Retrieve a specific company',
				endpoint: '/r/company/companies/{id}',
				action: 'Get a company',
				method: 'GET',
				fields: [
					{
						name: 'companyId',
						type: 'string',
						required: true,
						description: 'ID of the company to retrieve',
					},
				],
			},
			{
				name: 'Create Company',
				value: 'createCompany',
				description: 'Create a new company',
				endpoint: '/w/company/companies',
				action: 'Create a company',
				method: 'POST',
			},
			{
				name: 'Update Company',
				value: 'updateCompany',
				description: 'Update an existing company',
				endpoint: '/w/company/companies',
				action: 'Update a company',
				method: 'PATCH',
				fields: [
					{
						name: 'companyId',
						type: 'string',
						required: true,
						description: 'ID of the company to update',
					},
				],
			},
			{
				name: 'Delete Company',
				value: 'deleteCompany',
				description: 'Delete a company',
				endpoint: '/d/company/companies/{id}',
				action: 'Delete a company',
				method: 'DELETE',
				fields: [
					{
						name: 'companyId',
						type: 'string',
						required: true,
						description: 'ID of the company to delete',
					},
				],
			},
			{
				name: 'Get Company Stats',
				value: 'getCompanyStats',
				description: 'Retrieve company statistics',
				endpoint: '/r/company/company_stats',
				action: 'Get company stats',
				method: 'GET',
			},
			{
				name: 'Get Company Stat',
				value: 'getCompanyStat',
				description: 'Retrieve a specific company statistic',
				endpoint: '/r/company/company_stats/{id}',
				action: 'Get company stat',
				method: 'GET',
				fields: [
					{
						name: 'statId',
						type: 'string',
						required: true,
						description: 'ID of the company stat to retrieve',
					},
				],
			},
			{
				name: 'Get Asset Windows Compatibility',
				value: 'getAssetWindowsCompatibility',
				description: 'Retrieve asset windows compatibility information',
				endpoint: '/r/company/asset_windows_compatibility',
				action: 'Get asset windows compatibility',
				method: 'GET',
			},
			{
				name: 'Get All Jobs',
				value: 'getAllJobs',
				description: 'Retrieve all jobs',
				endpoint: '/r/company/jobs_view',
				action: 'Get all jobs',
				method: 'GET',
			},
			{
				name: 'Get Job',
				value: 'getJob',
				description: 'Retrieve a specific job',
				endpoint: '/r/company/jobs_view/{id}',
				action: 'Get a job',
				method: 'GET',
				fields: [
					{
						name: 'jobId',
						type: 'string',
						required: true,
						description: 'ID of the job to retrieve',
					},
				],
			},
		],
	},
	{
		name: 'Agent',
		value: 'agent',
		description: 'Agent operations',
		operations: [
			{
				name: 'Get All Agents',
				value: 'getAllAgents',
				description: 'Retrieve all agents',
				endpoint: '/r/company/agents',
				action: 'Get all agents',
				method: 'GET',
			},
			{
				name: 'Get Agent',
				value: 'getAgent',
				description: 'Retrieve a specific agent',
				endpoint: '/r/company/agents/{id}',
				action: 'Get an agent',
				method: 'GET',
				fields: [
					{
						name: 'agentId',
						type: 'string',
						required: true,
						description: 'ID of the agent to retrieve',
					},
				],
			},
		],
	},
	{
		name: 'Credentials',
		value: 'credentials',
		description: 'Credential operations',
		operations: [
			{
				name: 'Get All Credentials',
				value: 'getAllCredentials',
				description: 'Retrieve all credentials',
				endpoint: '/r/company/credentials',
				action: 'Get all credentials',
				method: 'GET',
			},
			{
				name: 'Get Credential',
				value: 'getCredential',
				description: 'Retrieve a specific credential',
				endpoint: '/r/company/credentials/{id}',
				action: 'Get a credential',
				method: 'GET',
				fields: [
					{
						name: 'credentialId',
						type: 'string',
						required: true,
						description: 'ID of the credential to retrieve',
					},
				],
			},
			{
				name: 'Create Credential',
				value: 'createCredential',
				description: 'Create a new credential',
				endpoint: '/w/company/credentials',
				action: 'Create a credential',
				method: 'POST',
			},
			{
				name: 'Update Credential',
				value: 'updateCredential',
				description: 'Update an existing credential',
				endpoint: '/w/company/credentials',
				action: 'Update a credential',
				method: 'PATCH',
				fields: [
					{
						name: 'credentialId',
						type: 'string',
						required: true,
						description: 'ID of the credential to update',
					},
				],
			},
			{
				name: 'Delete Credential',
				value: 'deleteCredential',
				description: 'Delete a credential',
				endpoint: '/d/company/credentials/{id}',
				action: 'Delete a credential',
				method: 'DELETE',
				fields: [
					{
						name: 'credentialId',
						type: 'string',
						required: true,
						description: 'ID of the credential to delete',
					},
				],
			},
		],
	},
	{
		name: 'Discovery Settings',
		value: 'discoverySettings',
		description: 'Discovery settings operations',
		operations: [
			{
				name: 'Get All Discovery Settings',
				value: 'getAllDiscoverySettings',
				description: 'Retrieve all discovery settings',
				endpoint: '/r/company/discovery_settings',
				action: 'Get all discovery settings',
				method: 'GET',
			},
			{
				name: 'Get Discovery Setting',
				value: 'getDiscoverySetting',
				description: 'Retrieve a specific discovery setting',
				endpoint: '/r/company/discovery_settings/{id}',
				action: 'Get a discovery setting',
				method: 'GET',
				fields: [
					{
						name: 'discoverySettingId',
						type: 'string',
						required: true,
						description: 'ID of the discovery setting to retrieve',
					},
				],
			},
			{
				name: 'Create Discovery Setting',
				value: 'createDiscoverySetting',
				description: 'Create a new discovery setting',
				endpoint: '/w/company/discovery_settings',
				action: 'Create a discovery setting',
				method: 'POST',
			},
			{
				name: 'Update Discovery Setting',
				value: 'updateDiscoverySetting',
				description: 'Update an existing discovery setting',
				endpoint: '/w/company/discovery_settings',
				action: 'Update a discovery setting',
				method: 'PATCH',
				fields: [
					{
						name: 'discoverySettingId',
						type: 'string',
						required: true,
						description: 'ID of the discovery setting to update',
					},
				],
			},
			{
				name: 'Delete Discovery Setting',
				value: 'deleteDiscoverySetting',
				description: 'Delete a discovery setting',
				endpoint: '/d/company/discovery_settings/{id}',
				action: 'Delete a discovery setting',
				method: 'DELETE',
				fields: [
					{
						name: 'discoverySettingId',
						type: 'string',
						required: true,
						description: 'ID of the discovery setting to delete',
					},
				],
			},
		],
	},
	{
		name: 'Asset',
		value: 'asset',
		description: 'Asset operations',
		operations: [
			{
				name: 'Get All Assets',
				value: 'getAllAssets',
				description: 'Retrieve all assets',
				endpoint: '/r/asset/assets',
				action: 'Get all assets',
				method: 'GET',
			},
			{
				name: 'Get Asset',
				value: 'getAsset',
				description: 'Retrieve a specific asset',
				endpoint: '/r/asset/assets/{id}',
				action: 'Get an asset',
				method: 'GET',
				fields: [
					{
						name: 'assetId',
						type: 'string',
						required: true,
						description: 'ID of the asset to retrieve',
					},
				],
			},
			{
				name: 'Create Asset',
				value: 'createAsset',
				description: 'Create a new asset',
				endpoint: '/w/asset/assets',
				action: 'Create an asset',
				method: 'POST',
			},
			{
				name: 'Update Asset',
				value: 'updateAsset',
				description: 'Update an existing asset',
				endpoint: '/w/asset/assets',
				action: 'Update an asset',
				method: 'PATCH',
				fields: [
					{
						name: 'assetId',
						type: 'string',
						required: true,
						description: 'ID of the asset to update',
					},
				],
			},
			{
				name: 'Delete Asset',
				value: 'deleteAsset',
				description: 'Delete an asset',
				endpoint: '/d/asset/assets/{id}',
				action: 'Delete an asset',
				method: 'DELETE',
				fields: [
					{
						name: 'assetId',
						type: 'string',
						required: true,
						description: 'ID of the asset to delete',
					},
				],
			},
			{
				name: 'Get Asset Stats',
				value: 'getAssetStats',
				description: 'Retrieve asset statistics',
				endpoint: '/r/asset/asset_stats',
				action: 'Get asset stats',
				method: 'GET',
			},
			{
				name: 'Get Asset Stat',
				value: 'getAssetStat',
				description: 'Retrieve a specific asset statistic',
				endpoint: '/r/asset/asset_stats/{id}',
				action: 'Get asset stat',
				method: 'GET',
				fields: [
					{
						name: 'assetStatId',
						type: 'string',
						required: true,
						description: 'ID of the asset stat to retrieve',
					},
				],
			},
		],
	},
	{
		name: 'Asset Data',
		value: 'assetData',
		description: 'Asset data operations',
		operations: [
			{
				name: 'Get Asset Compliance Report Card',
				value: 'getAssetComplianceReportCard',
				description: 'Retrieve asset compliance report card',
				endpoint: '/r/asset/asset_compliance_report_card/{id}',
				action: 'Get asset compliance report card',
				method: 'GET',
				fields: [
					{
						name: 'assetId',
						type: 'string',
						required: true,
						description: 'ID of the asset to retrieve compliance report card for',
					},
				],
			},
			{
				name: 'Get Asset Firewall Policy',
				value: 'getAssetFirewallPolicy',
				description: 'Retrieve asset firewall policy',
				endpoint: '/r/asset/asset_firewall_policy',
				action: 'Get asset firewall policy',
				method: 'GET',
			},
			{
				name: 'Get Asset Firewall Policy By ID',
				value: 'getAssetFirewallPolicyById',
				description: 'Retrieve asset firewall policy by ID',
				endpoint: '/r/asset/asset_firewall_policy/{id}',
				action: 'Get asset firewall policy by ID',
				method: 'GET',
				fields: [
					{
						name: 'firewallPolicyId',
						type: 'string',
						required: true,
						description: 'ID of the firewall policy to retrieve',
					},
				],
			},
			{
				name: 'Get Asset Installed Drivers',
				value: 'getAssetInstalledDrivers',
				description: 'Retrieve asset installed drivers',
				endpoint: '/r/asset/asset_installed_drivers',
				action: 'Get asset installed drivers',
				method: 'GET',
			},
			{
				name: 'Get Asset Installed Driver',
				value: 'getAssetInstalledDriver',
				description: 'Retrieve an asset installed driver by ID',
				endpoint: '/r/asset/asset_installed_drivers/{id}',
				action: 'Get asset installed driver',
				method: 'GET',
				fields: [
					{
						name: 'driverId',
						type: 'string',
						required: true,
						description: 'ID of the driver to retrieve',
					},
				],
			},
			{
				name: 'Get Asset Interfaces',
				value: 'getAssetInterfaces',
				description: 'Retrieve asset interfaces',
				endpoint: '/r/asset/asset_interface',
				action: 'Get asset interfaces',
				method: 'GET',
			},
			{
				name: 'Get Asset Interface',
				value: 'getAssetInterface',
				description: 'Retrieve an asset interface by ID',
				endpoint: '/r/asset/asset_interface/{id}',
				action: 'Get asset interface',
				method: 'GET',
				fields: [
					{
						name: 'interfaceId',
						type: 'string',
						required: true,
						description: 'ID of the interface to retrieve',
					},
				],
			},
			{
				name: 'Get Asset MSDT',
				value: 'getAssetMsdt',
				description: 'Retrieve asset MSDT information',
				endpoint: '/r/asset/asset_msdt',
				action: 'Get asset MSDT',
				method: 'GET',
			},
			{
				name: 'Get Asset MSDT By ID',
				value: 'getAssetMsdtById',
				description: 'Retrieve asset MSDT information by ID',
				endpoint: '/r/asset/asset_msdt/{id}',
				action: 'Get asset MSDT by ID',
				method: 'GET',
				fields: [
					{
						name: 'msdtId',
						type: 'string',
						required: true,
						description: 'ID of the MSDT information to retrieve',
					},
				],
			},
			{
				name: 'Get Asset Ports',
				value: 'getAssetPorts',
				description: 'Retrieve asset ports',
				endpoint: '/r/asset/asset_ports',
				action: 'Get asset ports',
				method: 'GET',
			},
			{
				name: 'Get Asset Port',
				value: 'getAssetPort',
				description: 'Retrieve an asset port by ID',
				endpoint: '/r/asset/asset_ports/{id}',
				action: 'Get asset port',
				method: 'GET',
				fields: [
					{
						name: 'portId',
						type: 'string',
						required: true,
						description: 'ID of the port to retrieve',
					},
				],
			},
			{
				name: 'Get Asset Security Report Data',
				value: 'getAssetSecurityReportData',
				description: 'Retrieve asset security report data',
				endpoint: '/r/asset/asset_security_report_data',
				action: 'Get asset security report data',
				method: 'GET',
			},
			{
				name: 'Get Asset Security Report Datum',
				value: 'getAssetSecurityReportDatum',
				description: 'Retrieve a specific asset security report datum',
				endpoint: '/r/asset/asset_security_report_data/{id}',
				action: 'Get asset security report datum',
				method: 'GET',
				fields: [
					{
						name: 'reportId',
						type: 'string',
						required: true,
						description: 'ID of the security report datum to retrieve',
					},
				],
			},
			{
				name: 'Get Asset Shares',
				value: 'getAssetShares',
				description: 'Retrieve asset shares',
				endpoint: '/r/asset/asset_shares',
				action: 'Get asset shares',
				method: 'GET',
			},
			{
				name: 'Get Asset Share',
				value: 'getAssetShare',
				description: 'Retrieve an asset share by ID',
				endpoint: '/r/asset/asset_shares/{id}',
				action: 'Get asset share',
				method: 'GET',
				fields: [
					{
						name: 'shareId',
						type: 'string',
						required: true,
						description: 'ID of the share to retrieve',
					},
				],
			},
			{
				name: 'Get Asset Storages',
				value: 'getAssetStorages',
				description: 'Retrieve asset storages',
				endpoint: '/r/asset/asset_storages',
				action: 'Get asset storages',
				method: 'GET',
			},
			{
				name: 'Get Asset Storage',
				value: 'getAssetStorage',
				description: 'Retrieve an asset storage by ID',
				endpoint: '/r/asset/asset_storages/{id}',
				action: 'Get asset storage',
				method: 'GET',
				fields: [
					{
						name: 'storageId',
						type: 'string',
						required: true,
						description: 'ID of the storage to retrieve',
					},
				],
			},
			{
				name: 'Get Asset Unquoted Services',
				value: 'getAssetUnquotedServices',
				description: 'Retrieve asset unquoted services',
				endpoint: '/r/asset/asset_unqouted_services',
				action: 'Get asset unquoted services',
				method: 'GET',
			},
			{
				name: 'Get Asset User Shares',
				value: 'getAssetUserShares',
				description: 'Retrieve asset user shares',
				endpoint: '/r/asset/asset_user_shares',
				action: 'Get asset user shares',
				method: 'GET',
			},
			{
				name: 'Get Asset User Share',
				value: 'getAssetUserShare',
				description: 'Retrieve an asset user share by ID',
				endpoint: '/r/asset/asset_user_shares/{id}',
				action: 'Get asset user share',
				method: 'GET',
				fields: [
					{
						name: 'shareId',
						type: 'string',
						required: true,
						description: 'ID of the user share to retrieve',
					},
				],
			},
			{
				name: 'Get Asset Video Info',
				value: 'getAssetVideoInfo',
				description: 'Retrieve asset video information',
				endpoint: '/r/asset/asset_video_info',
				action: 'Get asset video info',
				method: 'GET',
			},
			{
				name: 'Get Asset Video Info By ID',
				value: 'getAssetVideoInfoById',
				description: 'Retrieve asset video information by ID',
				endpoint: '/r/asset/asset_video_info/{id}',
				action: 'Get asset video info by ID',
				method: 'GET',
				fields: [
					{
						name: 'videoInfoId',
						type: 'string',
						required: true,
						description: 'ID of the video info to retrieve',
					},
				],
			},
			{
				name: 'Get Asset View',
				value: 'getAssetView',
				description: 'Retrieve asset view',
				endpoint: '/r/asset/asset_view',
				action: 'Get asset view',
				method: 'GET',
			},
			{
				name: 'Get Asset View By ID',
				value: 'getAssetViewById',
				description: 'Retrieve asset view by ID',
				endpoint: '/r/asset/asset_view/{id}',
				action: 'Get asset view by ID',
				method: 'GET',
				fields: [
					{
						name: 'viewId',
						type: 'string',
						required: true,
						description: 'ID of the view to retrieve',
					},
				],
			},
			{
				name: 'Get Asset Windows Reboot Required',
				value: 'getAssetWindowsRebootRequired',
				description: 'Retrieve asset windows reboot required information',
				endpoint: '/r/asset/asset_windows_reboot_required',
				action: 'Get asset windows reboot required',
				method: 'GET',
			},
			{
				name: 'Get Asset Windows Reboot Required By ID',
				value: 'getAssetWindowsRebootRequiredById',
				description: 'Retrieve asset windows reboot required information by ID',
				endpoint: '/r/asset/asset_windows_reboot_required/{id}',
				action: 'Get asset windows reboot required by ID',
				method: 'GET',
				fields: [
					{
						name: 'rebootId',
						type: 'string',
						required: true,
						description: 'ID of the reboot required information to retrieve',
					},
				],
			},
			{
				name: 'Get Asset Unquoted Service By ID',
				value: 'getAssetUnquotedServiceById',
				description: 'Retrieve asset unquoted service by ID',
				endpoint: '/r/asset/asset_unqouted_services/{id}',
				action: 'Get asset unquoted service by ID',
				method: 'GET',
				fields: [
					{
						name: 'serviceId',
						type: 'string',
						required: true,
						description: 'ID of the unquoted service to retrieve',
					},
				],
			},
		],
	},
	{
		name: 'Agent Credentials Mapping',
		value: 'agentCredentialsMapping',
		description: 'Agent credentials mapping operations',
		operations: [
			{
				name: 'Get All Agent Credentials Mappings',
				value: 'getAllAgentCredentialsMappings',
				description: 'Retrieve all agent credentials mappings',
				endpoint: '/r/company/agent_credentials_mapping',
				action: 'Get all agent credentials mappings',
				method: 'GET',
			},
			{
				name: 'Get Agent Credentials Mapping',
				value: 'getAgentCredentialsMapping',
				description: 'Retrieve a specific agent credentials mapping',
				endpoint: '/r/company/agent_credentials_mapping/{id}',
				action: 'Get an agent credentials mapping',
				method: 'GET',
				fields: [
					{
						name: 'mappingId',
						type: 'string',
						required: true,
						description: 'ID of the agent credentials mapping to retrieve',
					},
				],
			},
			{
				name: 'Create Agent Credentials Mapping',
				value: 'createAgentCredentialsMapping',
				description: 'Create a new agent credentials mapping',
				endpoint: '/w/company/agent_credentials_mapping',
				action: 'Create an agent credentials mapping',
				method: 'POST',
			},
			{
				name: 'Update Agent Credentials Mapping',
				value: 'updateAgentCredentialsMapping',
				description: 'Update an existing agent credentials mapping',
				endpoint: '/w/company/agent_credentials_mapping',
				action: 'Update an agent credentials mapping',
				method: 'PATCH',
				fields: [
					{
						name: 'mappingId',
						type: 'string',
						required: true,
						description: 'ID of the agent credentials mapping to update',
					},
				],
			},
			{
				name: 'Delete Agent Credentials Mapping',
				value: 'deleteAgentCredentialsMapping',
				description: 'Delete an agent credentials mapping',
				endpoint: '/d/company/agent_credentials_mapping/{id}',
				action: 'Delete an agent credentials mapping',
				method: 'DELETE',
				fields: [
					{
						name: 'mappingId',
						type: 'string',
						required: true,
						description: 'ID of the agent credentials mapping to delete',
					},
				],
			},
		],
	},
	{
		name: 'Agent Discovery Settings Mapping',
		value: 'agentDiscoverySettingsMapping',
		description: 'Agent discovery settings mapping operations',
		operations: [
			{
				name: 'Get Agent Discovery Settings Mapping',
				value: 'getAgentDiscoverySettingsMapping',
				description: 'Retrieve a specific agent discovery settings mapping',
				endpoint: '/r/company/agent_discoverysettings_mapping/{id}',
				action: 'Get an agent discovery settings mapping',
				method: 'GET',
				fields: [
					{
						name: 'mappingId',
						type: 'string',
						required: true,
						description: 'ID of the agent discovery settings mapping to retrieve',
					},
				],
			},
			{
				name: 'Create Agent Discovery Settings Mapping',
				value: 'createAgentDiscoverySettingsMapping',
				description: 'Create a new agent discovery settings mapping',
				endpoint: '/w/company/agent_discoverysettings_mapping',
				action: 'Create an agent discovery settings mapping',
				method: 'POST',
			},
			{
				name: 'Update Agent Discovery Settings Mapping',
				value: 'updateAgentDiscoverySettingsMapping',
				description: 'Update an existing agent discovery settings mapping',
				endpoint: '/w/company/agent_discoverysettings_mapping',
				action: 'Update an agent discovery settings mapping',
				method: 'PATCH',
				fields: [
					{
						name: 'mappingId',
						type: 'string',
						required: true,
						description: 'ID of the agent discovery settings mapping to update',
					},
				],
			},
			{
				name: 'Delete Agent Discovery Settings Mapping',
				value: 'deleteAgentDiscoverySettingsMapping',
				description: 'Delete an agent discovery settings mapping',
				endpoint: '/d/company/agent_discoverysettings_mapping/{id}',
				action: 'Delete an agent discovery settings mapping',
				method: 'DELETE',
				fields: [
					{
						name: 'mappingId',
						type: 'string',
						required: true,
						description: 'ID of the agent discovery settings mapping to delete',
					},
				],
			},
		],
	},
	{
		name: 'Vulnerability',
		value: 'vulnerability',
		description: 'Vulnerability operations',
		operations: [
			{
				name: 'Get Suppress Vulnerability',
				value: 'getSuppressVulnerability',
				description: 'Retrieve suppress vulnerability information',
				endpoint: '/r/asset/suppress_vulnerability',
				action: 'Get suppress vulnerability',
				method: 'GET',
			},
			{
				name: 'Get Suppress Vulnerability By ID',
				value: 'getSuppressVulnerabilityById',
				description: 'Retrieve suppress vulnerability information by ID',
				endpoint: '/r/asset/suppress_vulnerability/{id}',
				action: 'Get suppress vulnerability by ID',
				method: 'GET',
				fields: [
					{
						name: 'vulnerabilityId',
						type: 'string',
						required: true,
						description: 'ID of the vulnerability to retrieve',
					},
				],
			},
			{
				name: 'Create Suppress Vulnerability',
				value: 'createSuppressVulnerability',
				description: 'Create a new suppress vulnerability',
				endpoint: '/w/asset/suppress_vulnerability',
				action: 'Create suppress vulnerability',
				method: 'POST',
			},
			{
				name: 'Delete Suppress Vulnerability',
				value: 'deleteSuppressVulnerability',
				description: 'Delete a suppress vulnerability',
				endpoint: '/d/asset/suppress_vulnerability/{id}',
				action: 'Delete suppress vulnerability',
				method: 'DELETE',
				fields: [
					{
						name: 'vulnerabilityId',
						type: 'string',
						required: true,
						description: 'ID of the vulnerability to delete',
					},
				],
			},
		],
	},
	{
		name: 'Firewall',
		value: 'firewall',
		description: 'Firewall operations',
		operations: [
			{
				name: 'Get Firewall Groups',
				value: 'getFirewallGroups',
				description: 'Retrieve firewall groups',
				endpoint: '/r/asset/firewall_groups',
				action: 'Get firewall groups',
				method: 'GET',
			},
			{
				name: 'Get Firewall Group',
				value: 'getFirewallGroup',
				description: 'Retrieve a firewall group by ID',
				endpoint: '/r/asset/firewall_groups/{id}',
				action: 'Get firewall group',
				method: 'GET',
				fields: [
					{
						name: 'groupId',
						type: 'string',
						required: true,
						description: 'ID of the firewall group to retrieve',
					},
				],
			},
			{
				name: 'Get Firewall Interfaces',
				value: 'getFirewallInterfaces',
				description: 'Retrieve firewall interfaces',
				endpoint: '/r/asset/firewall_interfaces',
				action: 'Get firewall interfaces',
				method: 'GET',
			},
			{
				name: 'Get Firewall Interface',
				value: 'getFirewallInterface',
				description: 'Retrieve a firewall interface by ID',
				endpoint: '/r/asset/firewall_interfaces/{id}',
				action: 'Get firewall interface',
				method: 'GET',
				fields: [
					{
						name: 'interfaceId',
						type: 'string',
						required: true,
						description: 'ID of the firewall interface to retrieve',
					},
				],
			},
			{
				name: 'Get Firewall License',
				value: 'getFirewallLicense',
				description: 'Retrieve firewall license',
				endpoint: '/r/asset/firewall_license',
				action: 'Get firewall license',
				method: 'GET',
			},
			{
				name: 'Get Firewall License By ID',
				value: 'getFirewallLicenseById',
				description: 'Retrieve a firewall license by ID',
				endpoint: '/r/asset/firewall_license/{id}',
				action: 'Get firewall license by ID',
				method: 'GET',
				fields: [
					{
						name: 'licenseId',
						type: 'string',
						required: true,
						description: 'ID of the firewall license to retrieve',
					},
				],
			},
			{
				name: 'Get Firewall Rules',
				value: 'getFirewallRules',
				description: 'Retrieve firewall rules',
				endpoint: '/r/asset/firewall_rules',
				action: 'Get firewall rules',
				method: 'GET',
			},
			{
				name: 'Get Firewall Rule',
				value: 'getFirewallRule',
				description: 'Retrieve a firewall rule by ID',
				endpoint: '/r/asset/firewall_rules/{id}',
				action: 'Get firewall rule',
				method: 'GET',
				fields: [
					{
						name: 'ruleId',
						type: 'string',
						required: true,
						description: 'ID of the firewall rule to retrieve',
					},
				],
			},
			{
				name: 'Get Firewall Users',
				value: 'getFirewallUsers',
				description: 'Retrieve firewall users',
				endpoint: '/r/asset/firewall_users',
				action: 'Get firewall users',
				method: 'GET',
			},
			{
				name: 'Get Firewall User',
				value: 'getFirewallUser',
				description: 'Retrieve a firewall user by ID',
				endpoint: '/r/asset/firewall_users/{id}',
				action: 'Get firewall user',
				method: 'GET',
				fields: [
					{
						name: 'userId',
						type: 'string',
						required: true,
						description: 'ID of the firewall user to retrieve',
					},
				],
			},
			{
				name: 'Get Firewall Zones',
				value: 'getFirewallZones',
				description: 'Retrieve firewall zones',
				endpoint: '/r/asset/firewall_zones',
				action: 'Get firewall zones',
				method: 'GET',
			},
			{
				name: 'Get Firewall Zone',
				value: 'getFirewallZone',
				description: 'Retrieve a firewall zone by ID',
				endpoint: '/r/asset/firewall_zones/{id}',
				action: 'Get firewall zone',
				method: 'GET',
				fields: [
					{
						name: 'zoneId',
						type: 'string',
						required: true,
						description: 'ID of the firewall zone to retrieve',
					},
				],
			},
		],
	},
	{
		name: 'BIOS',
		value: 'bios',
		description: 'BIOS operations',
		operations: [
			{
				name: 'Get BIOS Info',
				value: 'getBiosInfo',
				description: 'Retrieve BIOS information',
				endpoint: '/r/asset/bios_info',
				action: 'Get BIOS info',
				method: 'GET',
			},
			{
				name: 'Get BIOS Info By ID',
				value: 'getBiosInfoById',
				description: 'Retrieve BIOS information by ID',
				endpoint: '/r/asset/bios_info/{id}',
				action: 'Get BIOS info by ID',
				method: 'GET',
				fields: [
					{
						name: 'biosId',
						type: 'string',
						required: true,
						description: 'ID of the BIOS info to retrieve',
					},
				],
			},
		],
	},
	{
		name: 'Browser',
		value: 'browser',
		description: 'Browser operations',
		operations: [
			{
				name: 'Get Browser Extensions',
				value: 'getBrowserExtensions',
				description: 'Retrieve browser extensions',
				endpoint: '/r/asset/browser_extensions',
				action: 'Get browser extensions',
				method: 'GET',
			},
			{
				name: 'Get Browser Extension',
				value: 'getBrowserExtension',
				description: 'Retrieve a browser extension by ID',
				endpoint: '/r/asset/browser_extensions/{id}',
				action: 'Get browser extension',
				method: 'GET',
				fields: [
					{
						name: 'extensionId',
						type: 'string',
						required: true,
						description: 'ID of the browser extension to retrieve',
					},
				],
			},
		],
	},
	{
		name: 'Ciphers',
		value: 'ciphers',
		description: 'Ciphers operations',
		operations: [
			{
				name: 'Get Ciphers View',
				value: 'getCiphersView',
				description: 'Retrieve ciphers view',
				endpoint: '/r/asset/ciphers_view',
				action: 'Get ciphers view',
				method: 'GET',
			},
			{
				name: 'Get Cipher View',
				value: 'getCipherView',
				description: 'Retrieve a cipher view by ID',
				endpoint: '/r/asset/ciphers_view/{id}',
				action: 'Get cipher view',
				method: 'GET',
				fields: [
					{
						name: 'cipherId',
						type: 'string',
						required: true,
						description: 'ID of the cipher view to retrieve',
					},
				],
			},
		],
	},
	{
		name: 'Windows Protection',
		value: 'windowsProtection',
		description: 'Windows protection operations',
		operations: [
			{
				name: 'Get Windows Protection Status',
				value: 'getWindowsProtectionStatus',
				description: 'Retrieve Windows protection status',
				endpoint: '/r/asset/windows_protection_status',
				action: 'Get Windows protection status',
				method: 'GET',
			},
			{
				name: 'Get Windows Protection Status By ID',
				value: 'getWindowsProtectionStatusById',
				description: 'Retrieve Windows protection status by ID',
				endpoint: '/r/asset/windows_protection_status/{id}',
				action: 'Get Windows protection status by ID',
				method: 'GET',
				fields: [
					{
						name: 'statusId',
						type: 'string',
						required: true,
						description: 'ID of the Windows protection status to retrieve',
					},
				],
			},
		],
	},
	{
		name: 'Report Queries',
		value: 'reportQueries',
		description: 'Report queries operations',
		operations: [
			{
				name: 'Get Asset Security Report Data',
				value: 'getAssetSecurityReportData',
				description: 'Retrieve asset security report data',
				endpoint: '/r/report_queries/asset_security_report_data',
				action: 'Get asset security report data',
				method: 'GET',
			},
			{
				name: 'Get Asset Software',
				value: 'getAssetSoftware',
				description: 'Retrieve asset software information',
				endpoint: '/r/report_queries/asset_software',
				action: 'Get asset software',
				method: 'GET',
			},
			{
				name: 'Get Asset Wise Vulnerabilities',
				value: 'getAssetWiseVulnerabilities',
				description: 'Retrieve asset wise vulnerabilities',
				endpoint: '/r/report_queries/asset_wise_vulnerabilities',
				action: 'Get asset wise vulnerabilities',
				method: 'GET',
			},
			{
				name: 'Get Assets By Application',
				value: 'getAssetsByApplication',
				description: 'Retrieve assets by application',
				endpoint: '/r/report_queries/assets_by_application',
				action: 'Get assets by application',
				method: 'GET',
			},
			{
				name: 'Get Assets By Application Suppressed',
				value: 'getAssetsByApplicationSuppressed',
				description: 'Retrieve assets by application (suppressed)',
				endpoint: '/r/report_queries/assets_by_application_suppressed',
				action: 'Get assets by application suppressed',
				method: 'GET',
			},
			{
				name: 'Get Cert Info View',
				value: 'getCertInfoView',
				description: 'Retrieve certificate information view',
				endpoint: '/r/report_queries/cert_info_view',
				action: 'Get cert info view',
				method: 'GET',
			},
			{
				name: 'Get Companies By Application',
				value: 'getCompaniesByApplication',
				description: 'Retrieve companies by application',
				endpoint: '/r/report_queries/companies_by_application',
				action: 'Get companies by application',
				method: 'GET',
			},
			{
				name: 'Get Companies By Application Suppressed',
				value: 'getCompaniesByApplicationSuppressed',
				description: 'Retrieve companies by application (suppressed)',
				endpoint: '/r/report_queries/companies_by_application_suppressed',
				action: 'Get companies by application suppressed',
				method: 'GET',
			},
			{
				name: 'Get Companies By Problem Group',
				value: 'getCompaniesByProblemGroup',
				description: 'Retrieve companies by problem group',
				endpoint: '/r/report_queries/companies_by_problem_group',
				action: 'Get companies by problem group',
				method: 'GET',
			},
			{
				name: 'Get Companies By Problem Group Suppressed',
				value: 'getCompaniesByProblemGroupSuppressed',
				description: 'Retrieve companies by problem group (suppressed)',
				endpoint: '/r/report_queries/companies_by_problem_group_suppressed',
				action: 'Get companies by problem group suppressed',
				method: 'GET',
			},
			{
				name: 'Get Compliance Asset Info',
				value: 'getComplianceAssetInfo',
				description: 'Retrieve compliance asset information',
				endpoint: '/r/report_queries/compliance_asset_info',
				action: 'Get compliance asset info',
				method: 'GET',
			},
			{
				name: 'Get Compliance Check Asset Count',
				value: 'getComplianceCheckAssetCount',
				description: 'Retrieve compliance check asset count',
				endpoint: '/r/report_queries/compliance_check_asset_count',
				action: 'Get compliance check asset count',
				method: 'GET',
			},
			{
				name: 'Get Compliance Check Company Count',
				value: 'getComplianceCheckCompanyCount',
				description: 'Retrieve compliance check company count',
				endpoint: '/r/report_queries/compliance_check_company_count',
				action: 'Get compliance check company count',
				method: 'GET',
			},
			{
				name: 'Get Compliance Check Count',
				value: 'getComplianceCheckCount',
				description: 'Retrieve compliance check count',
				endpoint: '/r/report_queries/compliance_check_count',
				action: 'Get compliance check count',
				method: 'GET',
			},
			{
				name: 'Get Compliance Check Count By Section',
				value: 'getComplianceCheckCountBySection',
				description: 'Retrieve compliance check count by section',
				endpoint: '/r/report_queries/compliance_check_count_by_section',
				action: 'Get compliance check count by section',
				method: 'GET',
			},
		],
	},
	{
		name: 'Integration',
		value: 'integration',
		description: 'Integration operations',
		operations: [
			{
				name: 'Get Company Mappings',
				value: 'getCompanyMappings',
				description: 'Retrieve company mappings',
				endpoint: '/r/integration/company_mappings',
				action: 'Get company mappings',
				method: 'GET',
			},
			{
				name: 'Get Company Mapping',
				value: 'getCompanyMapping',
				description: 'Retrieve a company mapping by ID',
				endpoint: '/r/integration/company_mappings/{id}',
				action: 'Get company mapping',
				method: 'GET',
				fields: [
					{
						name: 'mappingId',
						type: 'string',
						required: true,
						description: 'ID of the company mapping to retrieve',
					},
				],
			},
			{
				name: 'Create Company Mapping',
				value: 'createCompanyMapping',
				description: 'Create a new company mapping',
				endpoint: '/w/integration/company_mappings',
				action: 'Create company mapping',
				method: 'POST',
			},
			{
				name: 'Delete Company Mapping',
				value: 'deleteCompanyMapping',
				description: 'Delete a company mapping',
				endpoint: '/d/integration/company_mappings/{id}',
				action: 'Delete company mapping',
				method: 'DELETE',
				fields: [
					{
						name: 'mappingId',
						type: 'string',
						required: true,
						description: 'ID of the company mapping to delete',
					},
				],
			},
			{
				name: 'Get Integration Credentials',
				value: 'getIntegrationCredentials',
				description: 'Retrieve integration credentials',
				endpoint: '/r/integration/integration_credentials',
				action: 'Get integration credentials',
				method: 'GET',
			},
			{
				name: 'Get Integration Credential',
				value: 'getIntegrationCredential',
				description: 'Retrieve an integration credential by ID',
				endpoint: '/r/integration/integration_credentials/{id}',
				action: 'Get integration credential',
				method: 'GET',
				fields: [
					{
						name: 'credentialId',
						type: 'string',
						required: true,
						description: 'ID of the integration credential to retrieve',
					},
				],
			},
			{
				name: 'Create Integration Credential',
				value: 'createIntegrationCredential',
				description: 'Create a new integration credential',
				endpoint: '/w/integration/integration_credentials',
				action: 'Create integration credential',
				method: 'POST',
			},
			{
				name: 'Delete Integration Credential',
				value: 'deleteIntegrationCredential',
				description: 'Delete an integration credential',
				endpoint: '/d/integration/integration_credentials/{id}',
				action: 'Delete integration credential',
				method: 'DELETE',
				fields: [
					{
						name: 'credentialId',
						type: 'string',
						required: true,
						description: 'ID of the integration credential to delete',
					},
				],
			},
			{
				name: 'Get Integration Rules',
				value: 'getIntegrationRules',
				description: 'Retrieve integration rules',
				endpoint: '/r/integration/integration_rules',
				action: 'Get integration rules',
				method: 'GET',
			},
			{
				name: 'Get Integration Rule',
				value: 'getIntegrationRule',
				description: 'Retrieve an integration rule by ID',
				endpoint: '/r/integration/integration_rules/{id}',
				action: 'Get integration rule',
				method: 'GET',
				fields: [
					{
						name: 'ruleId',
						type: 'string',
						required: true,
						description: 'ID of the integration rule to retrieve',
					},
				],
			},
			{
				name: 'Create Integration Rule',
				value: 'createIntegrationRule',
				description: 'Create a new integration rule',
				endpoint: '/w/integration/integration_rules',
				action: 'Create integration rule',
				method: 'POST',
			},
			{
				name: 'Delete Integration Rule',
				value: 'deleteIntegrationRule',
				description: 'Delete an integration rule',
				endpoint: '/d/integration/integration_rules/{id}',
				action: 'Delete integration rule',
				method: 'DELETE',
				fields: [
					{
						name: 'ruleId',
						type: 'string',
						required: true,
						description: 'ID of the integration rule to delete',
					},
				],
			},
		],
	},
	{
		name: 'Authorization',
		value: 'authorization',
		description: 'Authorization operations',
		operations: [
			{
				name: 'Authorize',
				value: 'authorize',
				description: 'Authorize with the Connect Secure API',
				endpoint: '/w/authorize',
				action: 'Authorize',
				method: 'POST',
			},
		],
	},
	{
		name: 'Report Builder',
		value: 'reportBuilder',
		description: 'Report Builder operations',
		operations: [
			{
				name: 'Get Standard Report Settings',
				value: 'getStandardReportSettings',
				description: 'Retrieve standard report settings',
				endpoint: '/report_builder/get_standard_report_settings',
				action: 'Get standard report settings',
				method: 'GET',
			},
			{
				name: 'Update Standard Report Settings',
				value: 'updateStandardReportSettings',
				description: 'Update standard report settings',
				endpoint: '/report_builder/update_standard_report_settings',
				action: 'Update standard report settings',
				method: 'POST',
			},
			{
				name: 'Get Standard Reports',
				value: 'getStandardReports',
				description: 'Retrieve standard reports',
				endpoint: '/report_builder/standard_reports',
				action: 'Get standard reports',
				method: 'GET',
			},
			{
				name: 'Create Report Job',
				value: 'createReportJob',
				description: 'Create a new report job',
				endpoint: '/report_builder/create_report_job',
				action: 'Create report job',
				method: 'POST',
			},
			{
				name: 'Get Report Link',
				value: 'getReportLink',
				description: 'Retrieve a report link',
				endpoint: '/report_builder/get_report_link',
				action: 'Get report link',
				method: 'GET',
			},
			{
				name: 'Download Default Template',
				value: 'downloadDefaultTemplate',
				description: 'Download a default template',
				endpoint: '/report_builder/download_default_template',
				action: 'Download default template',
				method: 'GET',
			},
			{
				name: 'Upload Template',
				value: 'uploadTemplate',
				description: 'Upload a template',
				endpoint: '/report_builder/upload_template',
				action: 'Upload template',
				method: 'POST',
			},
			{
				name: 'Get Cover Page',
				value: 'getCoverPage',
				description: 'Retrieve cover page information',
				endpoint: '/report_builder/cover_page',
				action: 'Get cover page',
				method: 'GET',
			},
		],
	},
	{
		name: 'AD Information',
		value: 'adInformation',
		description: 'Active Directory information operations',
		operations: [
			{
				name: 'Get AD Basic Info',
				value: 'getAdBasicInfo',
				description: 'Retrieve basic Active Directory information',
				endpoint: '/report_queries/ad_basic_info',
				action: 'Get AD basic info',
				method: 'GET',
			},
			{
				name: 'Get AD Computers View',
				value: 'getAdComputersView',
				description: 'Retrieve Active Directory computers view',
				endpoint: '/report_queries/ad_computers_view',
				action: 'Get AD computers view',
				method: 'GET',
			},
			{
				name: 'Get AD Domain Details',
				value: 'getAdDomainDetails',
				description: 'Retrieve Active Directory domain details',
				endpoint: '/report_queries/ad_domain_details',
				action: 'Get AD domain details',
				method: 'GET',
			},
			{
				name: 'Get AD GPOs Details',
				value: 'getAdGposDetails',
				description: 'Retrieve Active Directory GPOs details',
				endpoint: '/report_queries/ad_gpos_details',
				action: 'Get AD GPOs details',
				method: 'GET',
			},
			{
				name: 'Get AD GPOs View',
				value: 'getAdGposView',
				description: 'Retrieve Active Directory GPOs view',
				endpoint: '/report_queries/ad_gpos_view',
				action: 'Get AD GPOs view',
				method: 'GET',
			},
			{
				name: 'Get AD Group Computers',
				value: 'getAdGroupComputers',
				description: 'Retrieve Active Directory group computers',
				endpoint: '/report_queries/ad_group_computers',
				action: 'Get AD group computers',
				method: 'GET',
			},
			{
				name: 'Get AD Group Users',
				value: 'getAdGroupUsers',
				description: 'Retrieve Active Directory group users',
				endpoint: '/report_queries/ad_group_users',
				action: 'Get AD group users',
				method: 'GET',
			},
			{
				name: 'Get AD Groups View',
				value: 'getAdGroupsView',
				description: 'Retrieve Active Directory groups view',
				endpoint: '/report_queries/ad_groups_view',
				action: 'Get AD groups view',
				method: 'GET',
			},
			{
				name: 'Get AD OUs View',
				value: 'getAdOusView',
				description: 'Retrieve Active Directory OUs view',
				endpoint: '/report_queries/ad_ous_view',
				action: 'Get AD OUs view',
				method: 'GET',
			},
			{
				name: 'Get AD Password Policies',
				value: 'getAdPasswordPolicies',
				description: 'Retrieve Active Directory password policies',
				endpoint: '/report_queries/ad_password_policies',
				action: 'Get AD password policies',
				method: 'GET',
			},
			{
				name: 'Get AD Roles',
				value: 'getAdRoles',
				description: 'Retrieve Active Directory roles',
				endpoint: '/report_queries/ad_roles',
				action: 'Get AD roles',
				method: 'GET',
			},
			{
				name: 'Get AD Roles Details',
				value: 'getAdRolesDetails',
				description: 'Retrieve Active Directory roles details',
				endpoint: '/report_queries/ad_roles_details',
				action: 'Get AD roles details',
				method: 'GET',
			},
			{
				name: 'Get AD Roles Member',
				value: 'getAdRolesMember',
				description: 'Retrieve Active Directory roles member',
				endpoint: '/report_queries/ad_roles_member',
				action: 'Get AD roles member',
				method: 'GET',
			},
			{
				name: 'Get AD User Licenses',
				value: 'getAdUserLicenses',
				description: 'Retrieve Active Directory user licenses',
				endpoint: '/report_queries/ad_user_licenses',
				action: 'Get AD user licenses',
				method: 'GET',
			},
			{
				name: 'Get AD Users View',
				value: 'getAdUsersView',
				description: 'Retrieve Active Directory users view',
				endpoint: '/report_queries/ad_users_view',
				action: 'Get AD users view',
				method: 'GET',
			},
			{
				name: 'Get AD Audit',
				value: 'getAdAudit',
				description: 'Retrieve Active Directory audit information',
				endpoint: '/report_queries/adaudit',
				action: 'Get AD audit',
				method: 'GET',
			},
		],
	},
	{
		name: 'Azure Information',
		value: 'azureInformation',
		description: 'Azure information operations',
		operations: [
			{
				name: 'Get Azure AD Logs',
				value: 'getAzureAdLogs',
				description: 'Retrieve Azure AD logs',
				endpoint: '/report_queries/azure_ad_logs',
				action: 'Get Azure AD logs',
				method: 'GET',
			},
			{
				name: 'Get Azure Licenses',
				value: 'getAzureLicenses',
				description: 'Retrieve Azure licenses',
				endpoint: '/report_queries/azure_licenses',
				action: 'Get Azure licenses',
				method: 'GET',
			},
			{
				name: 'Get Azure Secure Score',
				value: 'getAzureSecureScore',
				description: 'Retrieve Azure secure score',
				endpoint: '/report_queries/azure_secure_score',
				action: 'Get Azure secure score',
				method: 'GET',
			},
		],
	},
	{
		name: 'Asset Details',
		value: 'assetDetails',
		description: 'Asset details operations',
		operations: [
			{
				name: 'Get Asset Firewall Rules',
				value: 'getAssetFirewallRules',
				description: 'Retrieve asset firewall rules',
				endpoint: '/report_queries/asset_firewall_rules',
				action: 'Get asset firewall rules',
				method: 'GET',
			},
			{
				name: 'Get Asset IPTables Rules',
				value: 'getAssetIptablesRules',
				description: 'Retrieve asset IPTables rules',
				endpoint: '/report_queries/asset_iptables_rules',
				action: 'Get asset IPTables rules',
				method: 'GET',
			},
			{
				name: 'Get Asset Open Ports',
				value: 'getAssetOpenPorts',
				description: 'Retrieve asset open ports',
				endpoint: '/report_queries/asset_open_ports',
				action: 'Get asset open ports',
				method: 'GET',
			},
			{
				name: 'Get Asset Patches Info',
				value: 'getAssetPatchesInfo',
				description: 'Retrieve asset patches information',
				endpoint: '/report_queries/asset_patches_info',
				action: 'Get asset patches info',
				method: 'GET',
			},
			{
				name: 'Get Asset Processes Running',
				value: 'getAssetProcessesRunning',
				description: 'Retrieve asset processes running',
				endpoint: '/report_queries/asset_processes_running',
				action: 'Get asset processes running',
				method: 'GET',
			},
			{
				name: 'Get Asset Registry Misconfiguration',
				value: 'getAssetRegistryMisconfiguration',
				description: 'Retrieve asset registry misconfiguration',
				endpoint: '/report_queries/asset_registry_misconfiguration',
				action: 'Get asset registry misconfiguration',
				method: 'GET',
			},
			{
				name: 'Get Asset Services',
				value: 'getAssetServices',
				description: 'Retrieve asset services',
				endpoint: '/report_queries/asset_services',
				action: 'Get asset services',
				method: 'GET',
			},
			{
				name: 'Get Asset Users',
				value: 'getAssetUsers',
				description: 'Retrieve asset users',
				endpoint: '/report_queries/asset_users',
				action: 'Get asset users',
				method: 'GET',
			},
			{
				name: 'Get Remediated Assets',
				value: 'getRemediatedAssets',
				description: 'Retrieve remediated assets',
				endpoint: '/r/asset/remediated',
				action: 'Get remediated assets',
				method: 'GET',
			},
			{
				name: 'Get Remediated Asset',
				value: 'getRemediatedAsset',
				description: 'Retrieve a remediated asset by ID',
				endpoint: '/r/asset/remediated/{id}',
				action: 'Get remediated asset',
				method: 'GET',
				fields: [
					{
						name: 'assetId',
						type: 'string',
						required: true,
						description: 'ID of the remediated asset to retrieve',
					},
				],
			},
		],
	},
	{
		name: 'Linux Information',
		value: 'linuxInformation',
		description: 'Linux information operations',
		operations: [
			{
				name: 'Get Kernel Modules',
				value: 'getKernelModules',
				description: 'Retrieve kernel modules',
				endpoint: '/report_queries/kernel_modules',
				action: 'Get kernel modules',
				method: 'GET',
			},
			{
				name: 'Get SELinux Settings',
				value: 'getSelinuxSettings',
				description: 'Retrieve SELinux settings',
				endpoint: '/report_queries/selinux_settings',
				action: 'Get SELinux settings',
				method: 'GET',
			},
			{
				name: 'Get SUID Permissions',
				value: 'getSuidPermissions',
				description: 'Retrieve SUID permissions',
				endpoint: '/report_queries/suid_permissions',
				action: 'Get SUID permissions',
				method: 'GET',
			},
			{
				name: 'Get UFW Firewall Rules',
				value: 'getUfwFirewallRules',
				description: 'Retrieve UFW firewall rules',
				endpoint: '/report_queries/ufw_firewall_rules',
				action: 'Get UFW firewall rules',
				method: 'GET',
			},
			{
				name: 'Get Cron Jobs',
				value: 'getCronJobs',
				description: 'Retrieve cron jobs',
				endpoint: '/report_queries/cron_jobs',
				action: 'Get cron jobs',
				method: 'GET',
			},
		],
	},
	{
		name: 'Event Information',
		value: 'eventInformation',
		description: 'Event information operations',
		operations: [
			{
				name: 'Get Event Stats',
				value: 'getEventStats',
				description: 'Retrieve event statistics',
				endpoint: '/report_queries/event_stats',
				action: 'Get event stats',
				method: 'GET',
			},
			{
				name: 'Get Event Tickets',
				value: 'getEventTickets',
				description: 'Retrieve event tickets',
				endpoint: '/report_queries/event_tickets',
				action: 'Get event tickets',
				method: 'GET',
			},
			{
				name: 'Get System Events View',
				value: 'getSystemEventsView',
				description: 'Retrieve system events view',
				endpoint: '/report_queries/system_events_view',
				action: 'Get system events view',
				method: 'GET',
			},
			{
				name: 'Get System Events View By Ticket ID',
				value: 'getSystemEventsViewByTicketId',
				description: 'Retrieve system events view by ticket ID',
				endpoint: '/report_queries/system_events_view_ticketid',
				action: 'Get system events view by ticket ID',
				method: 'GET',
			},
			{
				name: 'Get Notification Tickets View',
				value: 'getNotificationTicketsView',
				description: 'Retrieve notification tickets view',
				endpoint: '/report_queries/notification_tickets_view',
				action: 'Get notification tickets view',
				method: 'GET',
			},
		],
	},
	{
		name: 'User Statistics',
		value: 'userStatistics',
		description: 'User statistics operations',
		operations: [
			{
				name: 'Get User Enabled Stats',
				value: 'getUserEnabledStats',
				description: 'Retrieve user enabled statistics',
				endpoint: '/report_queries/user_enabled_stats',
				action: 'Get user enabled stats',
				method: 'GET',
			},
			{
				name: 'Get User Event Stats',
				value: 'getUserEventStats',
				description: 'Retrieve user event statistics',
				endpoint: '/report_queries/user_event_stats',
				action: 'Get user event stats',
				method: 'GET',
			},
			{
				name: 'Get User Locked Stats',
				value: 'getUserLockedStats',
				description: 'Retrieve user locked statistics',
				endpoint: '/report_queries/user_locked_stats',
				action: 'Get user locked stats',
				method: 'GET',
			},
		],
	},
	{
		name: 'Compliance',
		value: 'compliance',
		description: 'Compliance operations',
		operations: [
			{
				name: 'Get Compliance Data',
				value: 'getComplianceData',
				description: 'Retrieve compliance data',
				endpoint: '/report_queries/compliance',
				action: 'Get compliance data',
				method: 'GET',
			},
		],
	},
];
